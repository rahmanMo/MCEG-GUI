// model definition for individual flights
// STG3D1 means stage 3 today. D2, D3, ... are following days

const mongoose = require("mongoose");
const Schema = mongoose.Schema;

// Stage 1

const STG1D0 = mongoose.model("STG1D0", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D0');

const STG1D1 = mongoose.model("STG1D1", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D1');

const STG1D2 = mongoose.model("STG1D2", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D2');

const STG1D3 = mongoose.model("STG1D3", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D3');

const STG1D4 = mongoose.model("STG1D4", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D4');

const STG1D5 = mongoose.model("STG1D5", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D5');

const STG1D6 = mongoose.model("STG1D6", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D6');

const STG1D7 = mongoose.model("STG1D7", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG1D7');

//  Stage 3

const STG3D0 = mongoose.model("STG3D0", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D0');

const STG3D1 = mongoose.model("STG3D1", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D1');

const STG3D2 = mongoose.model("STG3D2", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D2');

const STG3D3 = mongoose.model("STG3D3", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D3');

const STG3D4 = mongoose.model("STG3D4", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D4');

const STG3D5 = mongoose.model("STG3D5", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D5');

const STG3D6 = mongoose.model("STG3D6", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D6');

const STG3D7 = mongoose.model("STG3D7", new Schema ({
  recordStatus: String,
  lastDateModified: String,
  lastTimeModified: String,
  lastUserToModify: String,
  legDepartureDate: String,
  airlineCode: String,
  identifier: String,
  sequence: String,
  flightOriginDay: String,
  numericFlightDate: String,
  numGMTDate: String,
  STDudt: String,
  STAudt: String,
  tailNumber: String,
  numLastDateModified: String,
  flightStatus: String,
  origin: String,
  STDLocal: String,
  dispatchDesk: String,
  STDGMTVariance: String,
  destination: String,
  STALocal: String,
  STAGMTVariance: String,
  OAGEquipmentType: String,
  ACConfiguration: String,
  serviceType: String,
  originGate: String,
  ETDlocal: String,
  ETDudt: String,
  TAXIutc: String,
  OUTudt: String,
  OFFudt: String,
  destinationGate: String,
  ETAlocal: String,
  ETAudt: String,
  ONudt: String,
  INudt: String,
  previousTailNumber: String,
  ETE: String,
  DCNutc: String,
  ETOutc: String,
  EONutc: String,
  EDTCutc: String,
  flightType: String,
  newDepartureCity: String,
  newArrivalCity: String,
  SchedOAGEquipType: String,
  OAGEquipSubType: String,
  csvFSDailyID: String,
  tailNumBeforeCancel: String,
  CTAUTC: String,
  cancelled: String,
  replaced: String,
  ATCStatus: String,
  scheduledFlightType: String,
  aircraftRouting: String,
  mealService: String,
  hub: String,
  landingRestriction: String,
  headStartFlight: String,
  actualDeparture: String,
  specialFlight: String,
  actualArrival: String,
  scheduledTaxiOut: String,
  scheduledTaxiIn: String,
  STOSetByUser: String,
  STISetByUser: String,
  CTFlightNumber: String
}), 'STG3D7');

module.exports = {
  STG1D0,
  STG1D1,
  STG1D2,
  STG1D3,
  STG1D4,
  STG1D5,
  STG1D6,
  STG1D7,
  STG3D0,
  STG3D1,
  STG3D2,
  STG3D3,
  STG3D4,
  STG3D5,
  STG3D6,
  STG3D7 };
